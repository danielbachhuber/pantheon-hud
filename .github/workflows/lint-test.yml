name: Lint & Test
on:
  schedule:
    - cron: "0 0 * * *"
  push:
    branches:
      - '**'
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Composer dependencies
        run: composer install --no-interaction --prefer-dist
      - name: Run PHP Lint
        run: composer phpcs
  test-phpunit-74:
    needs: lint
    runs-on: ubuntu-latest
    container:
      image: quay.io/pantheon-public/build-tools-ci:8.x-php7.4
    services:
      mariadb:
        image: mariadb:10.5
    name: PHP 7.4 Unit Tests
    steps:
      - uses: actions/checkout@v3
      - name: Start MySQL Service
        run: sudo systemctl start mysql
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/vendor
          key: test-phpunit-dependencies-{{ checksum "composer.json" }}
          restore-keys: test-phpunit-dependencies-{{ checksum "composer.json" }}
      - name: Install Composer dependencies
        run: composer install
      - name: Run PHPUnit
        run: |
          bash bin/install-wp-tests.sh wordpress_test root '' latest
          echo "Running PHPUnit on Single Site"
          composer phpunit
          rm -rf $WP_TESTS_DIR $WP_CORE_DIR
          bash bin/install-wp-tests.sh wordpress_test root '' nightly true
          echo "Running PHPUnit on Multisite"
          WP_MULTISITE=1 composer phpunit
  test-phpunit-82:
    needs: lint
    runs-on: ubuntu-latest
    container:
      image: quay.io/pantheon-public/build-tools-ci:8.x-php8.2
    services:
      mariadb:
        image: mariadb:10.6
    name: PHP 8.2 Unit Tests
    steps:
      - uses: actions/checkout@v3
      - name: Start MySQL Service
        run: sudo systemctl start mysql
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/vendor
          key: test-phpunit-dependencies-{{ checksum "composer.json" }}
          restore-keys: test-phpunit-dependencies-{{ checksum "composer.json" }}
      - name: Install Composer dependencies
        run: composer install
      - name: Run PHPUnit
        run: |
          bash bin/install-wp-tests.sh wordpress_test root '' latest
          echo "Running PHPUnit on Single Site"
          composer phpunit
          rm -rf $WP_TESTS_DIR $WP_CORE_DIR
          bash bin/install-wp-tests.sh wordpress_test root '' nightly true
          echo "Running PHPUnit on Multisite"
          WP_MULTISITE=1 composer phpunit
  test-behat:
    needs:
      - test-phpunit-74
      - test-phpunit-82
    runs-on: ubuntu-latest
    container:
      image: quay.io/pantheon-public/build-tools-ci:8.x-php7.4
      options: --user root
    env:
      TERMINUS_TOKEN: ${{ secrets.TERMINUS_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      TERMINUS_ENV: ci-${{ github.run_number }}
      TERMINUS_SITE: pantheon-hud
      SITE_ENV: pantheon-hud.ci-${{ github.run_number }}
      WORDPRESS_ADMIN_USERNAME: pantheon
      WORDPRESS_ADMIN_EMAIL: no-reply@getpantheon.com
      WORDPRESS_ADMIN_PASSWORD: pantheon-hud.ci-${{ github.run_number }}
    name: Behat Tests
    steps:
      - uses: actions/checkout@v3
      - name: Install SSH Key
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SITE_OWNER_SSH_PRIVATE_KEY }}
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/vendor
          key: test-behat-dependencies-{{ checksum "composer.json" }}
          restore-keys: test-behat-dependencies-{{ checksum "composer.json" }}
      - name: Check for $GITHUB_TOKEN
        run: |
          if [ -z "$GITHUB_TOKEN" ]; then
            echo "GITHUB_TOKEN environment variables missing; assuming unauthenticated build"
            exit 0
          fi
          echo "Setting GitHub OAuth token with suppressed ouput"
          {
            composer config -g github-oauth.github.com $GITHUB_TOKEN
          } &> /dev/null
      - name: Check for $TERMINUS_TOKEN
        run: |
          if [ -z "$TERMINUS_TOKEN" ]; then
            echo "TERMINUS_TOKEN environment variables missing; assuming unauthenticated build"
            exit 0
          fi
          terminus auth:login --machine-token=$TERMINUS_TOKEN
      - name: Prepare Behat
        run: ./bin/behat-prepare.sh
      - name: Run Behat
        run: ./bin/behat-test.sh --strict
      - name: Cleanup Behat
        run: ./bin/behat-cleanup.sh
